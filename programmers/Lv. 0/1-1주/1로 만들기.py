'''
문제 설명
정수가 있을 때, 짝수라면 반으로 나누고, 홀수라면 1을 뺀 뒤 반으로 나누면, 마지막엔 1이 됩니다. 예를 들어 10이 있다면 다음과 같은 과정으로 1이 됩니다.

10 / 2 = 5
(5 - 1) / 2 = 4
4 / 2 = 2
2 / 2 = 1
위와 같이 4번의 나누기 연산으로 1이 되었습니다.

정수들이 담긴 리스트 num_list가 주어질 때, num_list의 모든 원소를 1로 만들기 위해서 필요한 나누기 연산의 횟수를 return하도록 solution 함수를 완성해주세요.
'''

def solution(num_list):
    answer = 0
    for i in num_list:
        while i != 1:
            if i%2 == 0:       # 이 세 줄을
                i = i/2        # i //= 2
            else: i = (i-1)/2  # 로 나타낼 수 있음
            answer += 1

    return answer


# 다른 사람 풀이
def solution(num_list):
    return sum(len(bin(i)) - 3 for i in num_list)
'''
bin(i): 정수 i를 이진법으로 변환. 예를 들어, bin(10)은 문자열 '0b1010'를 반환.
len(bin(i)) - 3: 이진법 문자열의 길이에서 2진수 접두사 '0b'를 제외한 나머지 길이를 계산. 예를 들어, len('0b1010') - 3은 4

+ 예를 들어 i=12 일때, bin(i) 를 하면 '0b1100' 이 됩니다. 여기서 우리는 마지막으로 남겨야 하는 1; 즉 2^0인 맨끝의 '0'과 과 이진수를 나타내는 앞의 '0b' 총 길이 3을 제외한 나머지 숫자들인 "110" 을 없애는 것이 목표값이 되는데, 이는 각 자리마다 2를 나누는 횟수기 때문에 "110"의 길이인 3이 됩니다. 홀 수 일 때는 어차피 -1을 해서 짝수로 만들기 때문에 가능합니다.
'''
